interface BaseWidget {
    name: string;
    is_hidden: boolean;
    required: boolean;
    attrs: {
        id: string;
        placeholder?: string;
        disabled?: boolean;
        required?: boolean;
    };
}
export interface TextInput extends BaseWidget {
    type: "text";
    template_name: "django/forms/widgets/text.html";
    value: string | null;
    attrs: BaseWidget["attrs"] & {
        maxlength?: string;
    };
}
export interface URLInput extends BaseWidget {
    type: "url";
    template_name: "django/forms/widgets/url.html";
    value: string | null;
    attrs: BaseWidget["attrs"] & {
        maxlength?: string;
    };
}
export interface NumberInput extends BaseWidget {
    type: "number";
    template_name: "django/forms/widgets/number.html";
    value: string | null;
    attrs: BaseWidget["attrs"] & {
        step: string;
    };
}
export interface CheckboxInput extends BaseWidget {
    type: "checkbox";
    template_name: "django/forms/widgets/checkbox.html";
    value: string | null;
    attrs: BaseWidget["attrs"] & {
        checked?: true;
    };
}
export interface PasswordInput extends BaseWidget {
    type: "password";
    template_name: "django/forms/widgets/password.html";
    value: string | null;
}
export interface EmailInput extends BaseWidget {
    type: "email";
    template_name: "django/forms/widgets/email.html";
    value: string | null;
}
export interface HiddenInput extends BaseWidget {
    type: "hidden";
    template_name: "django/forms/widgets/hidden.html";
    value: string | null;
}
export interface Textarea extends BaseWidget {
    template_name: "django/forms/widgets/textarea.html";
    value: string | null;
    attrs: BaseWidget["attrs"] & {
        cols: string;
        rows: string;
    };
}
export interface DateInput extends BaseWidget {
    template_name: "django/forms/widgets/date.html";
    type: "date";
    value: string | null;
}
export interface ClearableFileInput extends BaseWidget {
    template_name: "django/forms/widgets/clearable_file_input.html";
    type: "file";
    value: string | null;
    checkbox_name: string;
    checkbox_id: string;
    is_initial: boolean;
    input_text: string;
    initial_text: string;
    clear_checkbox_label: string;
}
declare type Optgroup = [
    null,
    [
        {
            name: string;
            value: string | number | boolean | null;
            label: string;
            selected: boolean;
        }
    ],
    number
];
export interface Select<T extends string = string> extends BaseWidget {
    value: T[];
    template_name: "django/forms/widgets/select.html";
    optgroups: Optgroup[];
}
export interface Autocomplete extends BaseWidget {
    value: string[];
    template_name: "reactivated/autocomplete";
    selected: {
        value: string | number;
        label: string;
    } | null;
}
export interface SelectMultiple<T extends string = string> extends Select<T> {
    attrs: BaseWidget["attrs"] & {
        multiple: "multiple";
    };
}
export interface SelectDateWidget extends BaseWidget {
    value: {
        year: string | null;
        month: string | null;
        day: string | null;
    };
    subwidgets: [Select, Select, Select];
    template_name: "django/forms/widgets/select_date.html";
}
export declare type WidgetType = TextInput | URLInput | NumberInput | CheckboxInput | PasswordInput | EmailInput | HiddenInput | Textarea | Select | Autocomplete | SelectMultiple | DateInput | SelectDateWidget | ClearableFileInput;
export declare const getValue: (optgroup: Optgroup) => string | number;
export declare const getValueForSelect: (widget: Select | Autocomplete | SelectMultiple) => string | string[];
export declare const isHidden: (widget: WidgetType) => boolean;
export {};
