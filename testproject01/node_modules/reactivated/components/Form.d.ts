import { WidgetType } from "./Widget";
interface FieldLike {
    name: string;
    widget: WidgetType;
    label: string;
    help_text: string;
}
export interface FieldMap {
    [name: string]: FieldLike;
}
export interface FormLike<T extends FieldMap> {
    name: string;
    fields: T;
    errors: {
        [P in keyof T]?: string[];
    } | null;
    iterator: Array<keyof T>;
    prefix: string;
}
export interface FormSetLike<T extends FieldMap> {
    initial_form_count: number;
    total_form_count: number;
    max_num: number;
    min_num: number;
    can_delete: boolean;
    can_order: boolean;
    non_form_errors: string[];
    management_form: unknown;
    prefix: string;
    forms: Array<FormLike<T>>;
    empty_form: FormLike<T>;
}
export declare const ManagementForm: <T extends FieldMap>({ formSet, }: {
    formSet: FormSetLike<T>;
}) => JSX.Element;
export {};
