"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
var fs_1 = __importDefault(require("fs"));
// Must be above the compile import as get-stdin used by
// json-schema-to-typescript messes up the descriptor even if unused.
var stdinBuffer = fs_1.default.readFileSync(0);
var ts_morph_1 = require("ts-morph");
var schema = JSON.parse(stdinBuffer.toString("utf8"));
var project = new ts_morph_1.Project();
var interfaces = project.createSourceFile("");
var urls = schema.urls, templates = schema.templates, types = schema.types, values = schema.values;
for (var _i = 0, _a = Object.keys(values); _i < _a.length; _i++) {
    var name_1 = _a[_i];
    interfaces.addVariableStatement({
        declarationKind: ts_morph_1.VariableDeclarationKind.Const,
        isExported: true,
        declarations: [
            {
                name: name_1,
                initializer: ts_morph_1.Writers.assertion(JSON.stringify(values[name_1]), "const"),
            },
        ],
    });
}
process.stdout.write(interfaces.getText());
//# sourceMappingURL=constants.js.map